name "dispatcher_base"

# If new data types need to be defined, they have to be put in a separate C++
# header, and this header will be loaded here
import_types_from "dispatcher_baseTypes.hpp"

import_types_from 'base'
using_library 'dispatcher_base'

# Generic dispatch task for streams of base::NamedVector<T>
#
# By default, it is activated by the dispatches' input ports
task_context "Task" do
    # This is the default from now on, and should not be removed. Rock will
    # transition to a setup where all components use a configuration step.
    needs_configuration

    # Output configuration
    #
    # The component will create the necessary ports at configure time based on
    # the port names that are listed in this output configuration
    property "outputs", "std/vector</dispatcher_base/OutputConfiguration>"

    # Dispatch configuration
    #
    # The component will create the necessary ports at configure time based on
    # the port names that are listed in this dispatch configuration
    #
    # The output port names listed here must have a corresponding
    # OutputConfiguration entry in the outputs property
    property "dispatches", "std/vector</dispatcher_base/SingleDispatchConfiguration>"
    
    #property "defaultConfiguration", "std/vector</dispatcher_base/DefaultJointConfiguration>"

    # Dynamic input port declaration for the inputs
    #dynamic_input_port /\w+/, 'base/samples/Joints'

    # Dynamic output port declaration for the inputs
    #dynamic_output_port /\w+/, 'base/samples/Joints'
end

